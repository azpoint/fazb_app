user www-data;
worker_processes auto;

events {
	worker_connections 1024;
}

http {
	include mime.types;
	limit_req_zone $request_uri zone=test_zone:10m rate=20r/s;
	resolver 127.0.0.11 valid=30s;

	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	# Default server for the IP address and unmatched requests
	server {
		listen 80 default_server; # Listen on port 80 and make this the default
		listen 443 ssl default_server; # Also listen on 443 for default HTTPS if needed
		server_name _; # Catch-all server name

		# Add SSL config for the default server if you want it to respond on 443
		# ssl_certificate /path/to/your/default/cert.pem;
		# ssl_certificate_key /path/to/your/default/key.pem;

		client_max_body_size 300M;

		location / {
			proxy_pass http://127.0.0.1:3000/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Range $http_range;
			proxy_set_header If-Range $http_if_range;
		}
	}

	# Redirect all HTTP to HTTPS for learnrhino.com
	server {
		listen 80;
		server_name www.learnrhino.com learnrhino.com;
		return 301 https://$host$request_uri;
	}

	# Donpolinario.com 404
	server {
		listen 80;
		server_name www.donpolinario.com donpolinario.com;
		return 404;
	}

	# LearnRhino App on Host (HTTPS)
	server {
		listen 443 ssl http2;
		server_name www.learnrhino.com learnrhino.com; # Added learnrhino.com here for direct HTTPS access

		ssl_certificate /etc/nginx/ssl/learnrhino-ssl/learnrhino.com.crt.pem;
		ssl_certificate_key /etc/nginx/ssl/learnrhino-ssl/learnrhino.com.key.pem;

		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;
			proxy_pass http://127.0.0.1:7070;
			proxy_redirect off;
		}
	}
}