user www-data;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Rate limit by request URI
    limit_req_zone $request_uri zone=test_zone:10m rate=20r/s;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Redirect all HTTP to HTTPS
    server {
        listen 80;
        server_name www.learnrhino.com learnrhino.com app.learnrhino.com;
        return 301 https://$host$request_uri;
    }

    # ========= LearnRhino App on Host =========
    server {
        listen 443 ssl http2;
        server_name www.learnrhino.com;

        ssl_certificate /etc/nginx/ssl/learnrhino-ssl/learnrhino.com.crt.pem;
        ssl_certificate_key /etc/nginx/ssl/learnrhino-ssl/learnrhino.com.key.pem;

        location / {
            limit_req zone=test_zone burst=5 nodelay;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:7070;
            proxy_redirect off;
        }
    }

    # ========= Containerized App via Docker Swarm =========
    server {
        listen 443 ssl http2;
        server_name app.learnrhino.com;

        ssl_certificate /etc/nginx/ssl/app-learnrhino-ssl/app.learnrhino.com.crt.pem;
        ssl_certificate_key /etc/nginx/ssl/app-learnrhino-ssl/app.learnrhino.com.key.pem;

        location / {
            limit_req zone=test_zone burst=10 nodelay;

            proxy_pass http://app:3000;  # Docker Swarm service name
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
        }
    }
}
